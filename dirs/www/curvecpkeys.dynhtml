#!/usr/bin/env python
# 20110913
# Jan Mojzis
# Public domain.

import os, lib, header, time, htmltemplate, sys, base32


def list_used_keys():
        """
        """

        ret = {}

        for d in os.listdir("etc"):
                try:
                        k = lib.openreadcloseescape("/etc/%s/env/KEYDIR" % d)
                        b = os.path.basename(k)
                except IOError:
                        continue
                else:
                        ret[b] = 1

        return str(list(ret.keys()))



try:
        lib.limit_resources()

        keyusage = "CurveCP keys"
        keydir = lib.curvecp_keydir
        keys = lib.curvecp_keys()
        keytype="curvecp"

        t = htmltemplate.Template("html/keys.html")
        d = header.header("curvecpkeys")
        d["keys"] = []
        d["newkey"] = [{"keytype":keytype}]
        d["usedkeys"] = list_used_keys()

        d["curvecp"] = [{}]
        d["dnscurve"] = []

        for name in keys:

                pkmtime = lib.getmtime("%s/%s/publickey" % (keydir,name))
                key = lib.openreadclose("%s/%s/publickey" % (keydir,name))
                pkkey   = lib.tohex(key)
                pkkey32 = base32.encode(key)

                tmp = {}
                tmp["name"] = name
                tmp["pk"] = str(pkkey)
                tmp["pk32"] = str(pkkey32[0:-1])
                tmp["tm"] = time.strftime('%Y.%m.%d %H:%M:%S',time.localtime(pkmtime))
                tmp["keytype"] = keytype
                
                d["keys"].append(tmp)

        t.write(d)

except:
        raise
