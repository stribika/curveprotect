--- nacl-20110221/curvecp/curvecpserver.c	2011-02-21 02:49:34.000000000 +0100
+++ nacl/curvecp/curvecpserver.c	2011-09-08 16:05:43.217597350 +0200
@@ -120,6 +120,18 @@
   return 1;
 }
 
+void pktohex(unsigned char *out, const unsigned char *in)
+{
+
+  long long j;
+
+  for (j = 0;j < crypto_box_PUBLICKEYBYTES;++j) {
+    out[2 * j + 0] = "0123456789abcdef"[15 & (int) (in[j] >> 4)];
+    out[2 * j + 1] = "0123456789abcdef"[15 & (int) (in[j] >> 0)];
+  }
+  out[2 * j] = 0;
+}
+
 /* cookies: */
 long long nextminute;
 unsigned char minutekey[32];
@@ -143,6 +155,7 @@
 
 /* client security: */
 unsigned char clientlongtermpk[32];
+unsigned char clientlongtermpkhex[65];
 unsigned char clientshorttermpk[32];
 
 /* shared secrets: */
@@ -380,6 +393,8 @@
 
 	/* XXX skip if client authentication is not desired: */
 	byte_copy(clientlongtermpk,32,text + 32);
+        pktohex(clientlongtermpkhex, clientlongtermpk);
+
 	/* XXX impose policy limitations on clients: known, maxconn */
 	/* XXX for known clients, retrieve shared secret from cache: */
 	crypto_box_beforenm(clientlongserverlong,clientlongtermpk,serverlongtermsk);
@@ -405,6 +420,7 @@
 	  close(9);
 	  if (dup(pi1[1]) != 9) die_fatal("unable to dup",0,0);
 	  /* XXX: set up environment variables */
+          if (setenv("REMOTEPK",  clientlongtermpkhex, 1) == -1) die_fatal("unable to set environment variable $REMOTEPK",0,0);
 	  signal(SIGPIPE,SIG_DFL);
 	  signal(SIGCHLD,SIG_DFL);
 	  execvp(*argv,argv);
