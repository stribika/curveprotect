diff -Nur djbdns-1.05.orig/base32_decode.c djbdns-1.05/base32_decode.c
--- djbdns-1.05.orig/base32_decode.c	1970-01-01 01:00:00.000000000 +0100
+++ djbdns-1.05/base32_decode.c	2013-01-21 08:58:45.433105697 +0100
@@ -0,0 +1,53 @@
+#include "base32.h"
+
+unsigned int base32_decode(char *out,const char *in,unsigned int len,int mode)
+{
+  /*
+   * digits = '0123456789bcdfghjklmnpqrstuvwxyz'
+   * ','.join('%2d' % digits.find(chr(x).lower()) for x in xrange(256))
+   */
+  static const char val[256] = {
+    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
+    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
+    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
+     0, 1, 2, 3, 4, 5, 6, 7, 8, 9,-1,-1,-1,-1,-1,-1,
+    -1,-1,10,11,12,-1,13,14,15,-1,16,17,18,19,20,-1,
+    21,22,23,24,25,26,27,28,29,30,31,-1,-1,-1,-1,-1,
+    -1,-1,10,11,12,-1,13,14,15,-1,16,17,18,19,20,-1,
+    21,22,23,24,25,26,27,28,29,30,31,-1,-1,-1,-1,-1,
+    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
+    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
+    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
+    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
+    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
+    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
+    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
+    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
+  };
+
+  unsigned int i;
+  unsigned int x, v, vbits;
+  char *out0 = out;
+
+  v = vbits = 0;
+  for (i = 0;i < len;++i) {
+    x = (unsigned char) val[(unsigned char) in[i]];
+    if (x >= 32) return 0;
+    v |= x << vbits;
+    vbits += 5;
+    if (vbits >= 8) {
+      *out++ = v;
+      v >>= 8;
+      vbits -= 8;
+    }
+  }
+
+  if (mode) {
+    if (vbits)
+      *out++ = v;
+  }
+  else if (vbits >= 5 || v)
+    return 0;
+
+  return out - out0;
+}
diff -Nur djbdns-1.05.orig/base32_encode.c djbdns-1.05/base32_encode.c
--- djbdns-1.05.orig/base32_encode.c	1970-01-01 01:00:00.000000000 +0100
+++ djbdns-1.05/base32_encode.c	2013-01-21 08:58:45.437105687 +0100
@@ -0,0 +1,54 @@
+#include "base32.h"
+#include "byte.h"
+
+const char base32_digits[32] = "0123456789bcdfghjklmnpqrstuvwxyz";
+
+unsigned int base32_bytessize(unsigned int len)
+{
+  len = (8 * len + 4) / 5;
+  return len + (len + 49) / 50;
+}
+
+void base32_encodebytes(char *out,const char *in,unsigned int len)
+{
+  unsigned int i, x, v, vbits;
+
+  x = v = vbits = 0;
+  for (i = 0;i < len;++i) {
+    v |= ((unsigned int) (unsigned char) in[i]) << vbits;
+    vbits += 8;
+    do {
+      out[++x] = base32_digits[v & 31];
+      v >>= 5;
+      vbits -= 5;
+      if (x == 50) {
+        *out = x;
+        out += 1 + x;
+        x = 0;
+      }
+    } while (vbits >= 5);
+  }
+
+  if (vbits) out[++x] = base32_digits[v & 31];
+  if (x) *out = x;
+}
+
+void base32_encodekey(char *out,const char *key)
+{
+  unsigned int i, v, vbits;
+
+  byte_copy(out,4,"\66x1a");
+  out += 4;
+
+  v = vbits = 0;
+  for (i = 0;i < 32;++i) {
+    v |= ((unsigned int) (unsigned char) key[i]) << vbits;
+    vbits += 8;
+    do {
+      *out++ = base32_digits[v & 31];
+      v >>= 5;
+      vbits -= 5;
+    } while (vbits >= 5);
+  }
+}
+
diff -Nur djbdns-1.05.orig/base32.h djbdns-1.05/base32.h
--- djbdns-1.05.orig/base32.h	1970-01-01 01:00:00.000000000 +0100
+++ djbdns-1.05/base32.h	2013-01-21 08:58:45.437105687 +0100
@@ -0,0 +1,10 @@
+#ifndef _BASE32_H____
+#define _BASE32_H____
+
+extern unsigned int base32_decode(char *out,const char *in,unsigned int len,int mode);
+
+extern unsigned int base32_bytessize(unsigned int len);
+extern void base32_encodebytes(char *out,const char *in,unsigned int len);
+extern void base32_encodekey(char *out,const char *key);
+
+#endif /* _BASE32_H____ */
diff -Nur djbdns-1.05.orig/dnscache.c djbdns-1.05/dnscache.c
--- djbdns-1.05.orig/dnscache.c	2013-01-21 08:58:23.157106075 +0100
+++ djbdns-1.05/dnscache.c	2013-01-21 08:59:11.053105224 +0100
@@ -23,6 +23,8 @@
 #include "log.h"
 #include "okclient.h"
 #include "droproot.h"
+#include "randombytes.h"
+#include "hexparse.h"
 
 static int packetquery(char *buf,unsigned int len,char **q,char qtype[2],char qclass[2],char id[2])
 {
@@ -305,6 +307,10 @@
   log_tcpopen(x->ip,x->port);
 }
 
+static unsigned char pk[32];
+static unsigned char sk[32];
+static unsigned char nk[16];
+
 
 iopause_fd io[3 + MAXUDP + MAXTCP];
 iopause_fd *udp53io;
@@ -411,16 +417,21 @@
   if (socket_bind4_reuse(tcp53,myipincoming,53) == -1)
     strerr_die2sys(111,FATAL,"unable to bind TCP socket: ");
 
-  droproot(FATAL);
+  randombytes((unsigned char *)seed, sizeof seed);
+  dns_random_init(seed);
 
-  socket_tryreservein(udp53,131072);
+  droproot(FATAL);
 
-  byte_zero(seed,sizeof seed);
-  read(0,seed,sizeof seed);
-  dns_random_init(seed);
-  close(0);
+  if (!hexparse(sk, sizeof sk, env_get("SECRETKEY")) ||
+      !hexparse(pk, sizeof pk, env_get("PUBLICKEY")) ||
+      !hexparse(nk, sizeof nk, env_get("NONCEKEY"))) {
+    dns_randomkey(pk,sk,nk);
+  }
+  log_dnscurvekey(pk);
+  query_init(pk,sk);
+  dns_nonce_init(env_get("NONCESTART"), nk);
 
-  query_init();
+  socket_tryreservein(udp53,131072);
 
   x = env_get("IPSEND");
   if (!x)
diff -Nur djbdns-1.05.orig/dns.h djbdns-1.05/dns.h
--- djbdns-1.05.orig/dns.h	2013-01-21 08:58:23.153106032 +0100
+++ djbdns-1.05/dns.h	2013-01-21 08:58:45.437105687 +0100
@@ -89,4 +89,10 @@
 extern int dns_ip4_qualify_rules(stralloc *,stralloc *,const stralloc *,const stralloc *);
 extern int dns_ip4_qualify(stralloc *,stralloc *,const stralloc *);
 
+extern void dns_nonce_init(const char *, const unsigned char *);
+extern void dns_nonce(char *);
+
+extern void dns_randomkey(unsigned char *, unsigned char *, unsigned char *);
+
+
 #endif
diff -Nur djbdns-1.05.orig/dns_key.c djbdns-1.05/dns_key.c
--- djbdns-1.05.orig/dns_key.c	1970-01-01 01:00:00.000000000 +0100
+++ djbdns-1.05/dns_key.c	2013-01-21 08:58:45.437105687 +0100
@@ -0,0 +1,17 @@
+#include "crypto_box.h"
+#include "randombytes.h"
+#include "dns.h"
+
+#if crypto_box_SECRETKEYBYTES != 32
+error!
+#endif
+#if crypto_box_PUBLICKEYBYTES != 32
+error!
+#endif
+
+
+void dns_randomkey(unsigned char *pk, unsigned char *sk, unsigned char *nk) {
+
+    crypto_box_keypair(pk, sk);
+    randombytes(nk, 16);
+}
diff -Nur djbdns-1.05.orig/dns_nonce.c djbdns-1.05/dns_nonce.c
--- djbdns-1.05.orig/dns_nonce.c	1970-01-01 01:00:00.000000000 +0100
+++ djbdns-1.05/dns_nonce.c	2013-01-21 08:58:45.441105671 +0100
@@ -0,0 +1,90 @@
+/*
+version 20130120
+Jan Mojzis
+Public domain.
+*/
+
+/* 1-4 byte - random number */
+/* 5-12 byte - TEA encrypted counter */
+
+#include <time.h>
+#include <sys/time.h>
+#include "uint32.h"
+#include "uint64.h"
+#include "byte.h"
+#include "dns.h"
+
+static unsigned char noncekey[16];
+static uint64 noncecounter = 0;
+static char noncemask[4] = {0, 0, 0, 0};
+static char noncedata[4] = {0, 0, 0, 0};
+
+void dns_nonce_init(const char *ns, const unsigned char *nk) {
+
+    struct timeval t;
+    int i;
+
+    gettimeofday(&t,(struct timezone *) 0);
+    noncecounter = t.tv_sec * 1000000000ULL + t.tv_usec * 1000ULL;
+
+    if (ns) {
+        i = 0;
+        while(i < 32) {
+            if (!ns[i]) break;
+            if (ns[i] != '0' && ns[i] != '1') break;
+
+            noncemask[i/8] = noncemask[i/8] * 2;
+            noncedata[i/8] = noncedata[i/8] * 2 +  ns[i] - '0';
+            ++i;
+        }
+        while(i < 32) {
+            noncemask[i/8] = noncemask[i/8] * 2 + 1;
+            noncedata[i/8] = noncedata[i/8] * 2;
+            ++i;
+        }
+    }
+
+    byte_copy(noncekey, sizeof noncekey, nk);
+
+    return;
+}
+
+static void dns_nonce_encrypt(unsigned char *out, uint64 in, const unsigned char *k) {
+
+    int i;
+    uint32 v0, v1, k0, k1, k2, k3;
+    uint32 sum = 0;
+    uint32 delta=0x9e3779b9;
+
+    v0 = in; in >>= 32;
+    v1 = in;
+    /*uint32_unpack(in + 0, &v0);
+    uint32_unpack(in + 4, &v1);*/
+    uint32_unpack((char *)(k + 0), &k0);
+    uint32_unpack((char *)(k + 4), &k1);
+    uint32_unpack((char *)(k + 8), &k2);
+    uint32_unpack((char *)(k + 12), &k3);
+
+    for (i = 0; i < 32; i++) {
+        sum += delta;
+        v0 += ((v1<<4) + k0) ^ (v1 + sum) ^ ((v1>>5) + k1);
+        v1 += ((v0<<4) + k2) ^ (v0 + sum) ^ ((v0>>5) + k3);  
+    } 
+    uint32_pack((char *)(out + 0),v0);
+    uint32_pack((char *)(out + 4),v1);
+    return;
+}
+
+void dns_nonce(char n[12]) {
+
+    int x;
+
+    for(x = 0; x < 4; ++x) {
+        n[x] = dns_random(256);
+        n[x] &= noncemask[x];
+        n[x] += noncedata[x];
+    }
+
+    dns_nonce_encrypt((unsigned char *)(n + 4), ++noncecounter, noncekey); 
+    return;
+}
diff -Nur djbdns-1.05.orig/dns_transmit.c djbdns-1.05/dns_transmit.c
--- djbdns-1.05.orig/dns_transmit.c	2013-01-21 08:58:23.157106075 +0100
+++ djbdns-1.05/dns_transmit.c	2013-01-21 08:58:45.441105671 +0100
@@ -9,90 +9,16 @@
 #include "uint64.h"
 #include "case.h"
 #include "dns.h"
+#include "base32.h"
 
-#include "crypto_box_curve25519xsalsa20poly1305.h"
+#include "crypto_box.h"
 
-#define crypto_box_afternm crypto_box_curve25519xsalsa20poly1305_afternm
-#define crypto_box_open_afternm crypto_box_curve25519xsalsa20poly1305_open_afternm
-
-/* XXX: put in uint64_pack.c */
-static void uint64_pack(char s[8],uint64 u)
-{
-  s[0] = u & 255; u >>= 8;
-  s[1] = u & 255; u >>= 8;
-  s[2] = u & 255; u >>= 8;
-  s[3] = u & 255; u >>= 8;
-  s[4] = u & 255; u >>= 8;
-  s[5] = u & 255; u >>= 8;
-  s[6] = u & 255; u >>= 8;
-  s[7] = u & 255;
-}
-
-/* XXX: put in dns_nonce.c */
-static void dns_nonce(char nonce[12])
-{
-  /* XXX: use nanoseconds */
-  static uint64 x;
-
-  uint64_pack(nonce,++x);
-  nonce[8] = dns_random(256);
-  nonce[9] = dns_random(256);
-  nonce[10] = dns_random(256);
-  nonce[11] = dns_random(256);
-}
-
-
-/* XXX: put in base32.c */
-static const char base32_digits[32] = "0123456789bcdfghjklmnpqrstuvwxyz";
-
-static unsigned int base32_bytessize(unsigned int len)
-{
-  len = (8 * len + 4) / 5;
-  return len + (len + 49) / 50;
-}
-
-static void base32_encodebytes(char *out,const char *in,unsigned int len)
-{
-  unsigned int i, x, v, vbits;
-
-  x = v = vbits = 0;
-  for (i = 0;i < len;++i) {
-    v |= ((unsigned int) (unsigned char) in[i]) << vbits;
-    vbits += 8;
-    do {
-      out[++x] = base32_digits[v & 31];
-      v >>= 5;
-      vbits -= 5;
-      if (x == 50) {
-        *out = x;
-        out += 1 + x;
-        x = 0;
-      }
-    } while (vbits >= 5);
-  }
-
-  if (vbits) out[++x] = base32_digits[v & 31];
-  if (x) *out = x;
-}
-
-static void base32_encodekey(char *out,const char *key)
-{
-  unsigned int i, v, vbits;
-
-  byte_copy(out,4,"\66x1a");
-  out += 4;
-
-  v = vbits = 0;
-  for (i = 0;i < 32;++i) {
-    v |= ((unsigned int) (unsigned char) key[i]) << vbits;
-    vbits += 8;
-    do {
-      *out++ = base32_digits[v & 31];
-      v >>= 5;
-      vbits -= 5;
-    } while (vbits >= 5);
-  }
-}
+#if crypto_box_PUBLICKEYBYTES != 32
+error!
+#endif
+#if crypto_box_NONCEBYTES != 24
+error!
+#endif
 
 
 static void makebasequery(struct dns_transmit *d,char *query)
@@ -111,7 +37,7 @@
 static void prepquery(struct dns_transmit *d)
 {
   unsigned int len;
-  char nonce[24];
+  char nonce[crypto_box_NONCEBYTES];
   const char *key;
   unsigned int m;
   unsigned int suffixlen;
@@ -137,7 +63,7 @@
     byte_copyr(d->query + 54,len + 32,d->query + 16);
     uint16_pack_big(d->query,len + 84);
     byte_copy(d->query + 2,8,"Q6fnvWj8");
-    byte_copy(d->query + 10,32,d->pubkey);
+    byte_copy(d->query + 10,crypto_box_PUBLICKEYBYTES,d->pubkey);
     byte_copy(d->query + 42,12,nonce);
     return;
   }
@@ -418,7 +344,7 @@
   return dns_transmit_start2(d,servers,flagrecursive,q,qtype,localip,0,0,0);
 }
 
-int dns_transmit_start2(struct dns_transmit *d,const char servers[64],int flagrecursive,const char *q,const char qtype[2],const char localip[4],const char keys[512],const char pubkey[32],const char *suffix)
+int dns_transmit_start2(struct dns_transmit *d,const char servers[64],int flagrecursive,const char *q,const char qtype[2],const char localip[4],const char keys[512],const char pubkey[crypto_box_PUBLICKEYBYTES],const char *suffix)
 {
   unsigned int len;
   unsigned int suffixlen;
diff -Nur djbdns-1.05.orig/FILES djbdns-1.05/FILES
--- djbdns-1.05.orig/FILES	2001-02-11 22:11:45.000000000 +0100
+++ djbdns-1.05/FILES	2013-01-21 08:58:45.441105671 +0100
@@ -92,6 +92,8 @@
 dns_sortip.c
 dns_transmit.c
 dns_txt.c
+dns_nonce.c
+dns_key.c
 choose.sh
 warn-auto.sh
 find-systype.sh
@@ -227,17 +229,17 @@
 trypoll.c
 tryshsgr.c
 trysysel.c
-tryulong32.c
-tryulong64.c
 uint16.h
 uint16_pack.c
 uint16_unpack.c
-uint32.h1
-uint32.h2
+uint32.h
 uint32_pack.c
 uint32_unpack.c
-uint64.h1
-uint64.h2
+uint64.h
+uint64_pack.c
 warn-shsgr
 buffer_read.c
 buffer_write.c
+base32_encode.c
+base32_decode.c
+base32.h
diff -Nur djbdns-1.05.orig/hexparse.c djbdns-1.05/hexparse.c
--- djbdns-1.05.orig/hexparse.c	1970-01-01 01:00:00.000000000 +0100
+++ djbdns-1.05/hexparse.c	2013-01-21 08:58:45.441105671 +0100
@@ -0,0 +1,25 @@
+#include "hexparse.h"
+
+static int hexdigit(char x)
+{
+  if (x >= '0' && x <= '9') return x - '0';
+  if (x >= 'a' && x <= 'f') return 10 + (x - 'a');
+  if (x >= 'A' && x <= 'F') return 10 + (x - 'A');
+  return -1;
+}
+
+int hexparse(unsigned char *y,long long len,const char *x)
+{
+  if (!x) return 0;
+  while (len > 0) {
+    int digit0;
+    int digit1;
+    digit0 = hexdigit(x[0]); if (digit0 == -1) return 0;
+    digit1 = hexdigit(x[1]); if (digit1 == -1) return 0;
+    *y++ = digit1 + 16 * digit0;
+    --len;
+    x += 2;
+  }
+  if (x[0]) return 0;
+  return 1;
+}
diff -Nur djbdns-1.05.orig/hexparse.h djbdns-1.05/hexparse.h
--- djbdns-1.05.orig/hexparse.h	1970-01-01 01:00:00.000000000 +0100
+++ djbdns-1.05/hexparse.h	2013-01-21 08:58:45.441105671 +0100
@@ -0,0 +1,6 @@
+#ifndef HEXPARSE_H
+#define HEXPARSE_H
+
+extern int hexparse(unsigned char *,long long,const char *);
+
+#endif
diff -Nur djbdns-1.05.orig/log.c djbdns-1.05/log.c
--- djbdns-1.05.orig/log.c	2013-01-21 08:58:23.157106075 +0100
+++ djbdns-1.05/log.c	2013-01-21 08:58:45.441105671 +0100
@@ -94,6 +94,16 @@
   line();
 }
 
+void log_dnscurvekey(const char *key)
+{
+  unsigned int i;
+  string("dnscurve public-key ");
+  for(i = 0; i < 32; ++i) {
+    hex(key[i]);
+  }
+  line();
+}
+
 void log_query(uint64 *qnum,const char client[4],unsigned int port,const char id[2],const char *q,const char qtype[2])
 {
   string("query "); number(*qnum); space();
diff -Nur djbdns-1.05.orig/log.h djbdns-1.05/log.h
--- djbdns-1.05.orig/log.h	2013-01-21 08:58:23.157106075 +0100
+++ djbdns-1.05/log.h	2013-01-21 08:58:45.445105667 +0100
@@ -4,6 +4,7 @@
 #include "uint64.h"
 
 extern void log_startup(void);
+extern void log_dnscurvekey(const char *key);
 
 extern void log_query(uint64 *,const char *,unsigned int,const char *,const char *,const char *);
 extern void log_querydrop(uint64 *);
diff -Nur djbdns-1.05.orig/Makefile djbdns-1.05/Makefile
--- djbdns-1.05.orig/Makefile	2013-01-21 08:58:23.153106032 +0100
+++ djbdns-1.05/Makefile	2013-01-21 08:58:45.445105667 +0100
@@ -76,6 +76,14 @@
 response.h uint32.h
 	./compile axfrdns.c
 
+base32_encode.o: \
+compile base32_encode.c base32.h byte.h
+	./compile base32_encode.c
+
+base32_decode.o: \
+compile base32_decode.c base32.h
+	./compile base32_decode.c
+
 buffer.a: \
 makelib buffer.o buffer_1.o buffer_2.o buffer_copy.o buffer_get.o \
 buffer_put.o strerr_die.o strerr_sys.o
@@ -119,13 +127,14 @@
 makelib byte_chr.o byte_copy.o byte_cr.o byte_diff.o byte_zero.o \
 case_diffb.o case_diffs.o case_lowerb.o fmt_ulong.o ip4_fmt.o \
 ip4_scan.o scan_ulong.o str_chr.o str_diff.o str_len.o str_rchr.o \
-str_start.o uint16_pack.o uint16_unpack.o uint32_pack.o \
-uint32_unpack.o
+str_start.o uint16_pack.o uint16_unpack.o uint32_pack.o uint64_pack.o \
+uint32_unpack.o base32_decode.o base32_encode.o
 	./makelib byte.a byte_chr.o byte_copy.o byte_cr.o \
 	byte_diff.o byte_zero.o case_diffb.o case_diffs.o \
 	case_lowerb.o fmt_ulong.o ip4_fmt.o ip4_scan.o scan_ulong.o \
 	str_chr.o str_diff.o str_len.o str_rchr.o str_start.o \
-	uint16_pack.o uint16_unpack.o uint32_pack.o uint32_unpack.o
+	uint16_pack.o uint16_unpack.o uint32_pack.o uint64_pack.o \
+	uint32_unpack.o base32_decode.o base32_encode.o
 
 byte_chr.o: \
 compile byte_chr.c byte.h
@@ -210,9 +219,9 @@
 	chmod 755 choose
 
 compile: \
-warn-auto.sh conf-cc
+warn-auto.sh conf-cc nacl.inc
 	( cat warn-auto.sh; \
-	echo exec "`head -1 conf-cc`" '-c $${1+"$$@"}' \
+	echo exec "`head -1 conf-cc` -I`cat nacl.inc`" '-c $${1+"$$@"}' \
 	) > compile
 	chmod 755 compile
 
@@ -228,11 +237,11 @@
 dns.a: \
 makelib dns_dfd.o dns_domain.o dns_dtda.o dns_ip.o dns_ipq.o dns_mx.o \
 dns_name.o dns_nd.o dns_packet.o dns_random.o dns_rcip.o dns_rcrw.o \
-dns_resolve.o dns_sortip.o dns_transmit.o dns_txt.o
+dns_resolve.o dns_sortip.o dns_transmit.o dns_txt.o dns_nonce.o dns_key.o
 	./makelib dns.a dns_dfd.o dns_domain.o dns_dtda.o dns_ip.o \
 	dns_ipq.o dns_mx.o dns_name.o dns_nd.o dns_packet.o \
 	dns_random.o dns_rcip.o dns_rcrw.o dns_resolve.o \
-	dns_sortip.o dns_transmit.o dns_txt.o
+	dns_sortip.o dns_transmit.o dns_txt.o dns_nonce.o dns_key.o
 
 dns_dfd.o: \
 compile dns_dfd.c error.h alloc.h byte.h dns.h stralloc.h gen_alloc.h \
@@ -259,6 +268,11 @@
 stralloc.h iopause.h taia.h tai.h uint64.h taia.h
 	./compile dns_ipq.c
 
+dns_key.o: \
+compile dns_key.c dns.h iopause.h stralloc.h gen_alloc.h \
+taia.h tai.h uint64.h
+	./compile dns_key.c
+
 dns_mx.o: \
 compile dns_mx.c stralloc.h gen_alloc.h byte.h uint16.h dns.h \
 stralloc.h iopause.h taia.h tai.h uint64.h taia.h
@@ -274,6 +288,11 @@
 taia.h tai.h uint64.h taia.h
 	./compile dns_nd.c
 
+dns_nonce.o: \
+compile dns_nonce.c byte.h dns.h taia.h tai.h uint32.h uint64.h \
+gen_alloc.h iopause.h openreadclose.h stralloc.h
+	./compile dns_nonce.c
+
 dns_packet.o: \
 compile dns_packet.c error.h dns.h stralloc.h gen_alloc.h iopause.h \
 taia.h tai.h uint64.h taia.h
@@ -309,7 +328,7 @@
 dns_transmit.o: \
 compile dns_transmit.c socket.h uint16.h alloc.h error.h byte.h \
 uint16.h dns.h stralloc.h gen_alloc.h iopause.h taia.h tai.h uint64.h \
-taia.h
+taia.h case.h base32.h
 	./compile dns_transmit.c
 
 dns_txt.o: \
@@ -319,12 +338,12 @@
 
 dnscache: \
 load dnscache.o droproot.o okclient.o log.o cache.o query.o \
-response.o dd.o roots.o iopause.o prot.o dns.a env.a alloc.a buffer.a \
-libtai.a unix.a byte.a socket.lib
+response.o dd.o roots.o hexparse.o iopause.o prot.o dns.a env.a alloc.a buffer.a \
+libtai.a unix.a byte.a socket.lib nacl.lib
 	./load dnscache droproot.o okclient.o log.o cache.o \
-	query.o response.o dd.o roots.o iopause.o prot.o dns.a \
+	query.o response.o dd.o roots.o hexparse.o iopause.o prot.o dns.a \
 	env.a alloc.a buffer.a libtai.a unix.a byte.a  `cat \
-	socket.lib`
+	socket.lib` `cat nacl.lib`
 
 dnscache-conf: \
 load dnscache-conf.o generic-conf.o auto_home.o libtai.a buffer.a \
@@ -348,9 +367,9 @@
 
 dnsfilter: \
 load dnsfilter.o iopause.o getopt.a dns.a env.a libtai.a alloc.a \
-buffer.a unix.a byte.a socket.lib
+buffer.a unix.a byte.a socket.lib nacl.lib
 	./load dnsfilter iopause.o getopt.a dns.a env.a libtai.a \
-	alloc.a buffer.a unix.a byte.a  `cat socket.lib`
+	alloc.a buffer.a unix.a byte.a  `cat socket.lib` `cat nacl.lib`
 
 dnsfilter.o: \
 compile dnsfilter.c strerr.h buffer.h stralloc.h gen_alloc.h alloc.h \
@@ -360,9 +379,9 @@
 
 dnsip: \
 load dnsip.o iopause.o dns.a env.a libtai.a alloc.a buffer.a unix.a \
-byte.a socket.lib
+byte.a socket.lib nacl.lib
 	./load dnsip iopause.o dns.a env.a libtai.a alloc.a \
-	buffer.a unix.a byte.a  `cat socket.lib`
+	buffer.a unix.a byte.a  `cat socket.lib`  `cat nacl.lib`
 
 dnsip.o: \
 compile dnsip.c buffer.h exit.h strerr.h ip4.h dns.h stralloc.h \
@@ -371,9 +390,9 @@
 
 dnsipq: \
 load dnsipq.o iopause.o dns.a env.a libtai.a alloc.a buffer.a unix.a \
-byte.a socket.lib
+byte.a socket.lib nacl.lib
 	./load dnsipq iopause.o dns.a env.a libtai.a alloc.a \
-	buffer.a unix.a byte.a  `cat socket.lib`
+	buffer.a unix.a byte.a  `cat socket.lib` `cat nacl.lib`
 
 dnsipq.o: \
 compile dnsipq.c buffer.h exit.h strerr.h ip4.h dns.h stralloc.h \
@@ -382,9 +401,9 @@
 
 dnsmx: \
 load dnsmx.o iopause.o dns.a env.a libtai.a alloc.a buffer.a unix.a \
-byte.a socket.lib
+byte.a socket.lib nacl.lib
 	./load dnsmx iopause.o dns.a env.a libtai.a alloc.a \
-	buffer.a unix.a byte.a  `cat socket.lib`
+	buffer.a unix.a byte.a  `cat socket.lib` `cat nacl.lib`
 
 dnsmx.o: \
 compile dnsmx.c buffer.h exit.h strerr.h uint16.h byte.h str.h fmt.h \
@@ -393,9 +412,9 @@
 
 dnsname: \
 load dnsname.o iopause.o dns.a env.a libtai.a alloc.a buffer.a unix.a \
-byte.a socket.lib
+byte.a socket.lib nacl.lib
 	./load dnsname iopause.o dns.a env.a libtai.a alloc.a \
-	buffer.a unix.a byte.a  `cat socket.lib`
+	buffer.a unix.a byte.a  `cat socket.lib` `cat nacl.lib`
 
 dnsname.o: \
 compile dnsname.c buffer.h exit.h strerr.h ip4.h dns.h stralloc.h \
@@ -404,10 +423,10 @@
 
 dnsq: \
 load dnsq.o iopause.o printrecord.o printpacket.o parsetype.o dns.a \
-env.a libtai.a buffer.a alloc.a unix.a byte.a socket.lib
+env.a libtai.a buffer.a alloc.a unix.a byte.a socket.lib nacl.lib
 	./load dnsq iopause.o printrecord.o printpacket.o \
 	parsetype.o dns.a env.a libtai.a buffer.a alloc.a unix.a \
-	byte.a  `cat socket.lib`
+	byte.a  `cat socket.lib` `cat nacl.lib`
 
 dnsq.o: \
 compile dnsq.c uint16.h strerr.h buffer.h scan.h str.h byte.h error.h \
@@ -417,10 +436,10 @@
 
 dnsqr: \
 load dnsqr.o iopause.o printrecord.o printpacket.o parsetype.o dns.a \
-env.a libtai.a buffer.a alloc.a unix.a byte.a socket.lib
+env.a libtai.a buffer.a alloc.a unix.a byte.a socket.lib nacl.lib
 	./load dnsqr iopause.o printrecord.o printpacket.o \
 	parsetype.o dns.a env.a libtai.a buffer.a alloc.a unix.a \
-	byte.a  `cat socket.lib`
+	byte.a  `cat socket.lib` `cat nacl.lib`
 
 dnsqr.o: \
 compile dnsqr.c uint16.h strerr.h buffer.h scan.h str.h byte.h \
@@ -430,10 +449,10 @@
 
 dnstrace: \
 load dnstrace.o dd.o iopause.o printrecord.o parsetype.o dns.a env.a \
-libtai.a alloc.a buffer.a unix.a byte.a socket.lib
+libtai.a alloc.a buffer.a unix.a byte.a socket.lib nacl.lib
 	./load dnstrace dd.o iopause.o printrecord.o parsetype.o \
 	dns.a env.a libtai.a alloc.a buffer.a unix.a byte.a  `cat \
-	socket.lib`
+	socket.lib` `cat nacl.lib`
 
 dnstrace.o: \
 compile dnstrace.c uint16.h uint32.h fmt.h str.h byte.h ip4.h \
@@ -451,9 +470,9 @@
 
 dnstxt: \
 load dnstxt.o iopause.o dns.a env.a libtai.a alloc.a buffer.a unix.a \
-byte.a socket.lib
+byte.a socket.lib nacl.lib
 	./load dnstxt iopause.o dns.a env.a libtai.a alloc.a \
-	buffer.a unix.a byte.a  `cat socket.lib`
+	buffer.a unix.a byte.a  `cat socket.lib` `cat nacl.lib`
 
 dnstxt.o: \
 compile dnstxt.c buffer.h exit.h strerr.h dns.h stralloc.h \
@@ -514,6 +533,10 @@
 	./chkshsgr || ( cat warn-shsgr; exit 1 )
 	./choose clr tryshsgr hasshsgr.h1 hasshsgr.h2 > hasshsgr.h
 
+hexparse.o: \
+compile hexparse.c hexparse.h
+	./compile hexparse.c
+
 hier.o: \
 compile hier.c auto_home.h
 	./compile hier.c
@@ -567,7 +590,7 @@
 	( cat warn-auto.sh; \
 	echo 'main="$$1"; shift'; \
 	echo exec "`head -1 conf-ld`" \
-	'-o "$$main" "$$main".o $${1+"$$@"} -lnacl' \
+	'-o "$$main" "$$main".o $${1+"$$@"}' \
 	) > load
 	chmod 755 load
 
@@ -691,7 +714,8 @@
 compile query.c error.h roots.h log.h uint64.h case.h cache.h \
 uint32.h uint64.h byte.h dns.h stralloc.h gen_alloc.h iopause.h \
 taia.h tai.h uint64.h taia.h uint64.h uint32.h uint16.h dd.h alloc.h \
-response.h uint32.h query.h dns.h uint32.h
+response.h uint32.h query.h dns.h uint32.h base32.h stralloc.h \
+gen_alloc.h openreadclose.h readclose.h open.h
 	./compile query.c
 
 random-ip: \
@@ -705,10 +729,10 @@
 
 rbldns: \
 load rbldns.o server.o response.o dd.o droproot.o qlog.o prot.o dns.a \
-env.a libtai.a cdb.a alloc.a buffer.a unix.a byte.a socket.lib
+env.a libtai.a cdb.a alloc.a buffer.a unix.a byte.a socket.lib nacl.lib
 	./load rbldns server.o response.o dd.o droproot.o qlog.o \
 	prot.o dns.a env.a libtai.a cdb.a alloc.a buffer.a unix.a \
-	byte.a  `cat socket.lib`
+	byte.a  `cat socket.lib` `cat nacl.lib`
 
 rbldns-conf: \
 load rbldns-conf.o generic-conf.o auto_home.o buffer.a unix.a byte.a
@@ -748,7 +772,7 @@
 roots.o: \
 compile roots.c open.h error.h str.h byte.h error.h direntry.h ip4.h \
 dns.h stralloc.h gen_alloc.h iopause.h taia.h tai.h uint64.h taia.h \
-openreadclose.h stralloc.h roots.h
+openreadclose.h stralloc.h roots.h hexparse.h
 	./compile roots.c
 
 rts: \
@@ -981,10 +1005,10 @@
 tinydns: \
 load tinydns.o server.o droproot.o tdlookup.o response.o qlog.o \
 prot.o dns.a libtai.a env.a cdb.a alloc.a buffer.a unix.a byte.a \
-socket.lib
+socket.lib nacl.lib
 	./load tinydns server.o droproot.o tdlookup.o response.o \
 	qlog.o prot.o dns.a libtai.a env.a cdb.a alloc.a buffer.a \
-	unix.a byte.a  `cat socket.lib`
+	unix.a byte.a  `cat socket.lib` `cat nacl.lib`
 
 tinydns-conf: \
 load tinydns-conf.o generic-conf.o auto_home.o buffer.a unix.a byte.a
@@ -1045,12 +1069,6 @@
 compile uint16_unpack.c uint16.h
 	./compile uint16_unpack.c
 
-uint32.h: \
-tryulong32.c compile load uint32.h1 uint32.h2
-	( ( ./compile tryulong32.c && ./load tryulong32 && \
-	./tryulong32 ) >/dev/null 2>&1 \
-	&& cat uint32.h2 || cat uint32.h1 ) > uint32.h
-	rm -f tryulong32.o tryulong32
 
 uint32_pack.o: \
 compile uint32_pack.c uint32.h
@@ -1060,9 +1078,10 @@
 compile uint32_unpack.c uint32.h
 	./compile uint32_unpack.c
 
-uint64.h: \
-choose compile load tryulong64.c uint64.h1 uint64.h2
-	./choose clr tryulong64 uint64.h1 uint64.h2 > uint64.h
+uint64_pack.o: \
+compile uint64_pack.c uint64.h
+	./compile uint64_pack.c
+
 
 unix.a: \
 makelib buffer_read.o buffer_write.o error.o error_str.o ndelay_off.o \
@@ -1085,10 +1104,10 @@
 
 walldns: \
 load walldns.o server.o response.o droproot.o qlog.o prot.o dd.o \
-dns.a env.a cdb.a alloc.a buffer.a unix.a byte.a socket.lib
+dns.a env.a cdb.a alloc.a buffer.a unix.a byte.a socket.lib nacl.lib
 	./load walldns server.o response.o droproot.o qlog.o \
 	prot.o dd.o dns.a env.a cdb.a alloc.a buffer.a unix.a \
-	byte.a  `cat socket.lib`
+	byte.a  `cat socket.lib` `cat nacl.lib`
 
 walldns-conf: \
 load walldns-conf.o generic-conf.o auto_home.o buffer.a unix.a byte.a
diff -Nur djbdns-1.05.orig/query.c djbdns-1.05/query.c
--- djbdns-1.05.orig/query.c	2013-01-21 08:58:23.161106098 +0100
+++ djbdns-1.05/query.c	2013-01-21 08:58:45.445105667 +0100
@@ -12,23 +12,26 @@
 #include "alloc.h"
 #include "response.h"
 #include "query.h"
+#include "base32.h"
 
-#include "crypto_scalarmult_curve25519.h"
-#include "crypto_box_curve25519xsalsa20poly1305.h"
+#include "crypto_box.h"
 
-#define crypto_scalarmult_base crypto_scalarmult_curve25519_base
-#define crypto_box_beforenm crypto_box_curve25519xsalsa20poly1305_beforenm
+#if crypto_box_SECRETKEYBYTES != 32
+error!
+#endif
+#if crypto_box_PUBLICKEYBYTES != 32
+error!
+#endif
 
-static char secretkey[32];
-static char publickey[32];
 
-void query_init(void)
-{
-  int k;
+static char secretkey[crypto_box_SECRETKEYBYTES];
+static char publickey[crypto_box_PUBLICKEYBYTES];
 
-  /* called after droproot(), can't use crypto_box_keypair (depends on /dev/urandom) */
-  for (k = 0;k < 32;++k) secretkey[k] = dns_random(256);
-  crypto_scalarmult_base((unsigned char *) publickey,(unsigned char *) secretkey);
+void query_init(const unsigned char *pk, const unsigned char *sk)
+{
+  byte_copy(publickey,crypto_box_PUBLICKEYBYTES,pk);
+  byte_copy(secretkey,crypto_box_SECRETKEYBYTES,sk);
+  return;
 }
 
 static int flagforwardonly = 0;
@@ -145,58 +148,6 @@
   return 0;
 }
 
-/* XXX: move to base32.c */
-static unsigned int base32_decode(char *out,const char *in,unsigned int len,int mode)
-{
-  /*
-   * digits = '0123456789bcdfghjklmnpqrstuvwxyz'
-   * ','.join('%2d' % digits.find(chr(x).lower()) for x in xrange(256))
-   */
-  static const char val[256] = {
-    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
-    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
-    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
-     0, 1, 2, 3, 4, 5, 6, 7, 8, 9,-1,-1,-1,-1,-1,-1,
-    -1,-1,10,11,12,-1,13,14,15,-1,16,17,18,19,20,-1,
-    21,22,23,24,25,26,27,28,29,30,31,-1,-1,-1,-1,-1,
-    -1,-1,10,11,12,-1,13,14,15,-1,16,17,18,19,20,-1,
-    21,22,23,24,25,26,27,28,29,30,31,-1,-1,-1,-1,-1,
-    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
-    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
-    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
-    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
-    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
-    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
-    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
-    -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
-  };
-
-  unsigned int i;
-  unsigned int x, v, vbits;
-  char *out0 = out;
-
-  v = vbits = 0;
-  for (i = 0;i < len;++i) {
-    x = (unsigned char) val[(unsigned char) in[i]];
-    if (x >= 32) return 0;
-    v |= x << vbits;
-    vbits += 5;
-    if (vbits >= 8) {
-      *out++ = v;
-      v >>= 8;
-      vbits -= 8;
-    }
-  }
-
-  if (mode) {
-    if (vbits)
-      *out++ = v;
-  }
-  else if (vbits >= 5 || v)
-    return 0;
-
-  return out - out0;
-}
 
 static int findkey(const char *dn,char key[32])
 {
@@ -743,7 +694,7 @@
         byte_copy(key,2,DNS_T_NS);
         byte_copy(key + 2,dlen,t1);
         case_lowerb(key + 2,dlen);
-        if (cache_get(key,dlen + 2,&cachedlen,&cachedttl,0)) if (cachedttl < ttl) ttl = cachedttl;
+        if (cache_get(key,dlen + 2,&cachedlen,&cachedttl)) if (cachedttl < ttl) ttl = cachedttl;
       }
       save_start();
       while (i < j) {
diff -Nur djbdns-1.05.orig/query.h djbdns-1.05/query.h
--- djbdns-1.05.orig/query.h	2013-01-21 08:58:23.161106098 +0100
+++ djbdns-1.05/query.h	2013-01-21 08:58:45.449105671 +0100
@@ -29,7 +29,7 @@
 extern void query_io(struct query *,iopause_fd *,struct taia *);
 extern int query_get(struct query *,iopause_fd *,struct taia *);
 
-extern void query_init(void);
+extern void query_init(const unsigned char *, const unsigned char *);
 extern void query_forwardonly(void);
 extern void query_usetxtformat(void);
 
diff -Nur djbdns-1.05.orig/TARGETS djbdns-1.05/TARGETS
--- djbdns-1.05.orig/TARGETS	2001-02-11 22:11:45.000000000 +0100
+++ djbdns-1.05/TARGETS	2013-01-21 08:58:45.449105671 +0100
@@ -2,9 +2,7 @@
 compile
 systype
 hasdevtcp.h
-uint32.h
 choose
-uint64.h
 dnscache-conf.o
 generic-conf.o
 auto-str.o
@@ -59,6 +57,7 @@
 uint16_unpack.o
 uint32_pack.o
 uint32_unpack.o
+uint64_pack.o
 byte.a
 auto-str
 auto_home.c
@@ -113,6 +112,8 @@
 dns_sortip.o
 dns_transmit.o
 dns_txt.o
+dns_nonce.o
+dns_key.o
 dns.a
 env.o
 env.a
@@ -207,6 +208,7 @@
 rts
 prog
 install.o
+hexparse.o
 hier.o
 install
 instcheck.o
@@ -214,3 +216,5 @@
 it
 setup
 check
+base32_encode.o
+base32_decode.o
diff -Nur djbdns-1.05.orig/TARGETS.orig djbdns-1.05/TARGETS.orig
--- djbdns-1.05.orig/TARGETS.orig	1970-01-01 01:00:00.000000000 +0100
+++ djbdns-1.05/TARGETS.orig	2013-01-21 08:58:45.449105671 +0100
@@ -0,0 +1,219 @@
+load
+compile
+systype
+hasdevtcp.h
+choose
+dnscache-conf.o
+generic-conf.o
+auto-str.o
+makelib
+buffer.o
+buffer_1.o
+buffer_2.o
+buffer_copy.o
+buffer_get.o
+buffer_put.o
+strerr_die.o
+strerr_sys.o
+buffer.a
+buffer_read.o
+buffer_write.o
+error.o
+error_str.o
+ndelay_off.o
+ndelay_on.o
+open_read.o
+open_trunc.o
+openreadclose.o
+readclose.o
+seek_set.o
+socket_accept.o
+socket_bind.o
+socket_conn.o
+socket_listen.o
+socket_recv.o
+socket_send.o
+socket_tcp.o
+socket_udp.o
+unix.a
+byte_chr.o
+byte_copy.o
+byte_cr.o
+byte_diff.o
+byte_zero.o
+case_diffb.o
+case_diffs.o
+case_lowerb.o
+fmt_ulong.o
+ip4_fmt.o
+ip4_scan.o
+scan_ulong.o
+str_chr.o
+str_diff.o
+str_len.o
+str_rchr.o
+str_start.o
+uint16_pack.o
+uint16_unpack.o
+uint32_pack.o
+uint32_unpack.o
+uint64_pack.o
+byte.a
+auto-str
+auto_home.c
+auto_home.o
+tai_add.o
+tai_now.o
+tai_pack.o
+tai_sub.o
+tai_uint.o
+tai_unpack.o
+taia_add.o
+taia_approx.o
+taia_frac.o
+taia_less.o
+taia_now.o
+taia_pack.o
+taia_sub.o
+taia_tai.o
+taia_uint.o
+libtai.a
+dnscache-conf
+iopause.h
+dnscache.o
+droproot.o
+okclient.o
+log.o
+cache.o
+query.o
+response.o
+dd.o
+direntry.h
+roots.o
+select.h
+iopause.o
+chkshsgr.o
+chkshsgr
+hasshsgr.h
+prot.o
+dns_dfd.o
+dns_domain.o
+dns_dtda.o
+dns_ip.o
+dns_ipq.o
+dns_mx.o
+dns_name.o
+dns_nd.o
+dns_packet.o
+dns_random.o
+dns_rcip.o
+dns_rcrw.o
+dns_resolve.o
+dns_sortip.o
+dns_transmit.o
+dns_txt.o
+dns_nonce.o
+dns_key.o
+dns.a
+env.o
+env.a
+alloc.o
+alloc_re.o
+getln.o
+getln2.o
+stralloc_cat.o
+stralloc_catb.o
+stralloc_cats.o
+stralloc_copy.o
+stralloc_eady.o
+stralloc_num.o
+stralloc_opyb.o
+stralloc_opys.o
+stralloc_pend.o
+alloc.a
+socket.lib
+dnscache
+walldns-conf.o
+walldns-conf
+walldns.o
+server.o
+qlog.o
+cdb.o
+cdb_hash.o
+cdb_make.o
+cdb.a
+walldns
+rbldns-conf.o
+rbldns-conf
+rbldns.o
+rbldns
+rbldns-data.o
+rbldns-data
+pickdns-conf.o
+pickdns-conf
+pickdns.o
+pickdns
+pickdns-data.o
+pickdns-data
+tinydns-conf.o
+tinydns-conf
+tinydns.o
+tdlookup.o
+tinydns
+tinydns-data.o
+tinydns-data
+tinydns-get.o
+printpacket.o
+printrecord.o
+parsetype.o
+tinydns-get
+tinydns-edit.o
+tinydns-edit
+axfr-get.o
+timeoutread.o
+timeoutwrite.o
+axfr-get
+axfrdns-conf.o
+axfrdns-conf
+axfrdns.o
+axfrdns
+dnsip.o
+dnsip
+dnsipq.o
+dnsipq
+dnsname.o
+dnsname
+dnstxt.o
+dnstxt
+dnsmx.o
+dnsmx
+dnsfilter.o
+sgetopt.o
+subgetopt.o
+getopt.a
+dnsfilter
+random-ip.o
+random-ip
+dnsqr.o
+dnsqr
+dnsq.o
+dnsq
+dnstrace.o
+dnstrace
+dnstracesort
+cachetest.o
+cachetest
+utime.o
+utime
+rts
+prog
+install.o
+hier.o
+install
+instcheck.o
+instcheck
+it
+setup
+check
+base32_encode.o
+base32_decode.o
diff -Nur djbdns-1.05.orig/tryulong32.c djbdns-1.05/tryulong32.c
--- djbdns-1.05.orig/tryulong32.c	2001-02-11 22:11:45.000000000 +0100
+++ djbdns-1.05/tryulong32.c	1970-01-01 01:00:00.000000000 +0100
@@ -1,11 +0,0 @@
-int main()
-{
-  unsigned long u;
-  u = 1;
-  u += u; u += u; u += u; u += u; u += u; u += u; u += u; u += u;
-  u += u; u += u; u += u; u += u; u += u; u += u; u += u; u += u;
-  u += u; u += u; u += u; u += u; u += u; u += u; u += u; u += u;
-  u += u; u += u; u += u; u += u; u += u; u += u; u += u; u += u;
-  if (!u) _exit(0);
-  _exit(1);
-}
diff -Nur djbdns-1.05.orig/tryulong64.c djbdns-1.05/tryulong64.c
--- djbdns-1.05.orig/tryulong64.c	2001-02-11 22:11:45.000000000 +0100
+++ djbdns-1.05/tryulong64.c	1970-01-01 01:00:00.000000000 +0100
@@ -1,11 +0,0 @@
-int main()
-{
-  unsigned long u;
-  u = 1;
-  u += u; u += u; u += u; u += u; u += u; u += u; u += u; u += u;
-  u += u; u += u; u += u; u += u; u += u; u += u; u += u; u += u;
-  u += u; u += u; u += u; u += u; u += u; u += u; u += u; u += u;
-  u += u; u += u; u += u; u += u; u += u; u += u; u += u; u += u;
-  if (!u) _exit(1);
-  _exit(0);
-}
diff -Nur djbdns-1.05.orig/uint16.h djbdns-1.05/uint16.h
--- djbdns-1.05.orig/uint16.h	2001-02-11 22:11:45.000000000 +0100
+++ djbdns-1.05/uint16.h	2013-01-21 08:58:45.449105671 +0100
@@ -1,7 +1,9 @@
 #ifndef UINT16_H
 #define UINT16_H
 
-typedef unsigned short uint16;
+#include "crypto_uint16.h"
+
+typedef crypto_uint16 uint16;
 
 extern void uint16_pack(char *,uint16);
 extern void uint16_pack_big(char *,uint16);
diff -Nur djbdns-1.05.orig/uint32.h djbdns-1.05/uint32.h
--- djbdns-1.05.orig/uint32.h	1970-01-01 01:00:00.000000000 +0100
+++ djbdns-1.05/uint32.h	2013-01-21 08:58:45.449105671 +0100
@@ -0,0 +1,13 @@
+#ifndef UINT32_H
+#define UINT32_H
+
+#include "crypto_uint32.h"
+
+typedef crypto_uint32 uint32;
+
+extern void uint32_pack(char *,uint32);
+extern void uint32_pack_big(char *,uint32);
+extern void uint32_unpack(const char *,uint32 *);
+extern void uint32_unpack_big(const char *,uint32 *);
+
+#endif
diff -Nur djbdns-1.05.orig/uint32.h1 djbdns-1.05/uint32.h1
--- djbdns-1.05.orig/uint32.h1	2001-02-11 22:11:45.000000000 +0100
+++ djbdns-1.05/uint32.h1	1970-01-01 01:00:00.000000000 +0100
@@ -1,11 +0,0 @@
-#ifndef UINT32_H
-#define UINT32_H
-
-typedef unsigned int uint32;
-
-extern void uint32_pack(char *,uint32);
-extern void uint32_pack_big(char *,uint32);
-extern void uint32_unpack(const char *,uint32 *);
-extern void uint32_unpack_big(const char *,uint32 *);
-
-#endif
diff -Nur djbdns-1.05.orig/uint32.h2 djbdns-1.05/uint32.h2
--- djbdns-1.05.orig/uint32.h2	2001-02-11 22:11:45.000000000 +0100
+++ djbdns-1.05/uint32.h2	1970-01-01 01:00:00.000000000 +0100
@@ -1,11 +0,0 @@
-#ifndef UINT32_H
-#define UINT32_H
-
-typedef unsigned long uint32;
-
-extern void uint32_pack(char *,uint32);
-extern void uint32_pack_big(char *,uint32);
-extern void uint32_unpack(const char *,uint32 *);
-extern void uint32_unpack_big(const char *,uint32 *);
-
-#endif
diff -Nur djbdns-1.05.orig/uint64.h djbdns-1.05/uint64.h
--- djbdns-1.05.orig/uint64.h	1970-01-01 01:00:00.000000000 +0100
+++ djbdns-1.05/uint64.h	2013-01-21 08:58:45.453105677 +0100
@@ -0,0 +1,13 @@
+#ifndef UINT64_H
+#define UINT64_H
+
+#include "crypto_uint64.h"
+
+typedef crypto_uint64 uint64;
+
+extern void uint64_pack(char *,uint64);
+extern void uint64_pack_big(char *,uint64);
+extern void uint64_unpack(const char *,uint64 *);
+extern void uint64_unpack_big(const char *,uint64 *);
+
+#endif
diff -Nur djbdns-1.05.orig/uint64.h1 djbdns-1.05/uint64.h1
--- djbdns-1.05.orig/uint64.h1	2001-02-11 22:11:45.000000000 +0100
+++ djbdns-1.05/uint64.h1	1970-01-01 01:00:00.000000000 +0100
@@ -1,8 +0,0 @@
-#ifndef UINT64_H
-#define UINT64_H
-
-/* sysdep: -ulong64 */
-
-typedef unsigned long long uint64;
-
-#endif
diff -Nur djbdns-1.05.orig/uint64.h2 djbdns-1.05/uint64.h2
--- djbdns-1.05.orig/uint64.h2	2001-02-11 22:11:45.000000000 +0100
+++ djbdns-1.05/uint64.h2	1970-01-01 01:00:00.000000000 +0100
@@ -1,8 +0,0 @@
-#ifndef UINT64_H
-#define UINT64_H
-
-/* sysdep: +ulong64 */
-
-typedef unsigned long uint64;
-
-#endif
diff -Nur djbdns-1.05.orig/uint64_pack.c djbdns-1.05/uint64_pack.c
--- djbdns-1.05.orig/uint64_pack.c	1970-01-01 01:00:00.000000000 +0100
+++ djbdns-1.05/uint64_pack.c	2013-01-21 08:58:45.453105677 +0100
@@ -0,0 +1,37 @@
+#include "uint64.h"
+
+void uint64_pack(char s[8],uint64 u)
+{
+  s[0] = u & 255;
+  u >>= 8;
+  s[1] = u & 255;
+  u >>= 8;
+  s[2] = u & 255;
+  u >>= 8;
+  s[3] = u & 255;
+  u >>= 8;
+  s[4] = u & 255;
+  u >>= 8;
+  s[5] = u & 255;
+  u >>= 8;
+  s[6] = u & 255;
+  s[7] = u >> 8;
+}
+
+void uint64_pack_big(char s[8],uint64 u)
+{
+  s[7] = u & 255;
+  u >>= 8;
+  s[6] = u & 255;
+  u >>= 8;
+  s[5] = u & 255;
+  u >>= 8;
+  s[4] = u & 255;
+  u >>= 8;
+  s[3] = u & 255;
+  u >>= 8;
+  s[2] = u & 255;
+  u >>= 8;
+  s[1] = u & 255;
+  s[0] = u >> 8;
+}
